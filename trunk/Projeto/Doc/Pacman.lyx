#LyX 1.6.6.1 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage[brazil]{babel}    % dá suporte para os termos na língua portuguesa do Brasil
\usepackage{url}
\usepackage{textcomp}
\usepackage[table]{xcolor}
\usepackage{array}
\usepackage{longtable}
\usepackage{graphicx}
\usepackage{amsmath} 
\usepackage{wrapfig}
\numberwithin{table}{section}
\numberwithin{figure}{section}
\usepackage{color}
\usepackage{indentfirst}
\usepackage{multicol}
\usepackage{listings}
\usepackage{bbding}
 \usepackage{courier}
 \lstset{
         basicstyle=\scriptsize , 
         numbers=left,               
         numberstyle=\tiny,         
         %stepnumber=2,              
         numbersep=5pt,             
         tabsize=2,                  
         extendedchars=true,  
         breaklines=true,       
         keywordstyle=\color{blue},
         frame=b,         
         stringstyle=\color{green}, 
         showspaces=false,          
         showtabs=false,             
         xleftmargin=5pt,
         framexleftmargin=5pt,
         framexrightmargin=1pt,
         framexbottommargin=1pt,
         language=VHDL,
         fontadjust,
         %backgroundcolor=\color{lightgray},
         showstringspaces=false              
  }
 \lstloadlanguages{VHDL
 }
  \usepackage{caption}
\DeclareCaptionFont{white}{\color{white}}
\DeclareCaptionFont{green}{\color{green}}
\DeclareCaptionFormat{listing}{\colorbox[cmyk]{0.43, 0.35, 0.35,0.01}{\parbox{\textwidth}{\hspace{15pt}#1#2#3}}}
\captionsetup[lstlisting]{format=listing,labelfont=white,textfont=white, singlelinecheck=false, margin=0pt, font={bf,footnotesize}}




\newcommand*{\titleTMB}{\begingroup \centering \settowidth{\unitlength}{\LARGE MC 613} \vspace*{\baselineskip} {\large\scshape  Grupo 5 - Turma A}\\[\baselineskip] \rule{11.0cm}{1.6pt}\vspace*{-\baselineskip}\vspace*{2pt} \rule{11.0cm}{0.4pt}\\[\baselineskip] {\LARGE Projeto Final }\\[0.2\baselineskip] {\LARGE de Circuitos Digitais}\\[0.2\baselineskip] {\itshape MC 613 - Primeiro Semestre de 2010}\\[0.2\baselineskip] \rule{11.0cm}{0.4pt}\vspace*{-\baselineskip}\vspace{3.2pt} \rule{11.0cm}{1.6pt}\\[\baselineskip] {\large\scshape Professor: Guido Araújo}\par \vfill {\normalsize   \scshape 
\begin{center} 
\begin{tabular}{  l  l  p{5cm} } 
Henrique Serapião Gonzales     &  RA: 083636 \\
Marcelo Galvão Póvoa & RA: 082115\\ 		
Tiago Chedraoui Silva      & RA: 082941\\  	
\end{tabular} \end{center}
\itshape \today }\\[\baselineskip] \vspace{3.2pt} \endgroup}

\floatname{algorithm}{Algoritmo}
\end_preamble
\use_default_options true
\begin_modules
eqs-within-sections
figs-within-sections
tabs-within-sections
\end_modules
\language brazilian
\inputencoding auto
\font_roman ae
\font_sans lmss
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\float_placement H
\paperfontsize default
\spacing single
\use_hyperref false
\papersize letterpaper
\use_geometry true
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\leftmargin 3cm
\rightmargin 3cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{titlepage}  
\backslash
titleTMB 
\backslash
end{titlepage} % capa no preambulo document settings
\end_layout

\begin_layout Plain Layout

 
\end_layout

\end_inset


\end_layout

\begin_layout Section
Introdução
\end_layout

\begin_layout Standard
Nosso projeto foi criar em VHDL um jogo inspirado no clássico original 
\noun on
Pacman
\noun default
, de autoria de Tohru Iwatani em 1980 pela NAMCO.
 Devido às dificuldades inerentes em se projetar um jogo relativamente complexo
 com lógica de 
\emph on
hardware
\emph default
 ao invés de usar um processador com barramento de memória para tal, algumas
 partes foram simplificadas em relação ao jogo original.
 Os componentes de hardware usados foram, além da placa DE1, um monitor
 VGA e um teclado padrão PS/2.
 O jogo é projetado para dois jogadores (ao contrário de apenas um no jogo
 original) que disputam a vitória em um labirinto, um controla os fantasmas
 e o outro o pacman.
 Para mais detalhes das regras, consulte o jogo original em 
\family sans
http://en.wikipedia.org/wiki/Pac-Man
\family default
\noun on
.
\end_layout

\begin_layout Standard
O código resultou relativamente extenso, portanto o funcionamento em detalhes
 de suas partes não está descrita nesse texto, mas ao longo do código extensivam
ente comentado.
 Esse relatório limita-se a discutir a estrutura geral do design, as consideraçõ
es tomadas para o projeto, as dificuldades encontradas e as possíveis soluções.
\end_layout

\begin_layout Section
Descrição estrutural
\end_layout

\begin_layout Standard
A organização de componentes do projeto é simples.
 Consta de um 
\emph on
top-level
\emph default
 que instancia e comunica alguns controladores de lógica de jogo e controladores
 de dispositivos independentes.
 Uma máquina de estados principal controla o andamento do jogo, gerando
 sinais para os componentes trocarem informações.
 Algumas operações são realizadas no 
\emph on
top-level
\emph default
, entre elas o controle de parâmetros globais do jogo - como vidas e pontuação
 - que determinam o fim do jogo (o pacman ou os fantasmas vencem).
 Devido ao fato dos sinais necessários para o desenho dos personagens na
 tela depender de vários outros sinais, a geração destes primeiros também
 está feita em um grande 
\noun on
PROCESS
\noun default
 no 
\emph on
top-level.
\end_layout

\begin_layout Standard
Em resumo, os componentes principais são os seguintes (veja mais detalhes
 nas respectivas arquiteturas e instâncias).
\end_layout

\begin_layout Subsection
Controladores de lógica do jogo
\end_layout

\begin_layout Itemize

\noun on
ctrl_pacman: 
\noun default
Componente que gera a nova posição do pacman baseado no mapa ao redor dele
 que recebe.
\end_layout

\begin_layout Itemize

\noun on
ctrl_fans: 
\noun default
Componente que gera as novas posições de múltiplos fantasmas do jogo baseado
 nos mapas ao redor deles que recebe.
 Também gerencia e informa os estados atuais dos fantasmas com máquinas
 de estado.
\end_layout

\begin_layout Itemize

\noun on
ctrl_frutas: 
\noun default
Componente que gera, "aleatoriamente", sinais que informam que uma fruta
 apareceu temporariamente no mapa (elas representam um bônus para o pacman).
 Ao capturar a fruta, esse componente é resetado.
\end_layout

\begin_layout Subsection
Controladores de dispositivos
\end_layout

\begin_layout Itemize

\noun on
vgacon: 
\noun default
Faz a varredura dos pixels da tela na frequência apropriada, gerando também
 todos os sinais para a interface VGA.
 Contém internamente duas memórias RAM que representam em blocos lógicos
 (não foram usados pixels, veja a seção 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Problemas-e-Soluções"

\end_inset

 para mais detalhes) o estado atual da tela em duas camadas: cenário e 
\emph on
overlay
\emph default
 (para desenho dos personagens).
 
\emph on
Sprites
\emph default
 são usados para mapear esses blocos em pixels de profundidade 3-bit.
\end_layout

\begin_layout Itemize

\noun on
disp: 
\noun default
Controla os quatro displays de 7-segmentos da placa, usados para complementar
 o HUD
\begin_inset Foot
status collapsed

\begin_layout Plain Layout

\emph on
Head-Up Display: 
\emph default
conjunto de símbolos exibidos para informar ao jogador as condições atuais
 do jogo
\end_layout

\end_inset

 com a pontuação atual e mensagens de final de jogo.
 Essa parte não foi implementada na tela devido a complexidade necessária
 para escrever texto na mesma.
\end_layout

\begin_layout Itemize

\noun on
kbd_key: 
\noun default
Realiza comunicação com o teclado, gerando sinais quando são pressionadas
 teclas de interesse para o jogo (cursores de movimento).
 Leia sobre os problemas desse componente na seção 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Problemas-e-Soluções"

\end_inset

.
\end_layout

\begin_layout Subsection
Pacotes de Definições
\end_layout

\begin_layout Itemize

\noun on
pac_defs: 
\noun default
Contém todas as constantes e tipos principais usados globalmente no jogo.
 Note que algumas constantes específicas estão localizadas nos respectivos
 controladores.
 Armazena visualmente a estrutura do labirinto do jogo carregada em RAM.
 Esse pacote é destinado a ser facilmente customizável e entendido por usuários.
\end_layout

\begin_layout Itemize

\noun on
pac_sprites: 
\noun default
Coleção (extensa) de constantes usadas para 
\emph on
sprites
\emph default
 e mapeamento de 
\emph on
sprites
\emph default
 enviados à tela.
 A maior parte deste pacote foi gerada automaticamente e não é aconselhável
 editá-lo manualmente.
\end_layout

\begin_layout Section
Problemas e Soluções
\begin_inset CommandInset label
LatexCommand label
name "sec:Problemas-e-Soluções"

\end_inset


\end_layout

\begin_layout Subsection
Dificuldade de instanciar uma RAM (resolvido)
\end_layout

\begin_layout Standard
Nos estágios iniciais do projeto, houve bastante dificuldade em fazer o
 compilador inferir uma RAM através do 
\emph on
template
\emph default
 do fabricante.
 Queríamos uma RAM que fosse inicializada com o mapa do jogo, para isso
 alteramos a 
\series bold
função de inicialização
\series default
 do 
\emph on
template
\emph default
 para copiar para a RAM um array constante que continha blocos 
\series bold
enumerados
\series default
.
 Após compilar, a RAM não era reconhecida.
\end_layout

\begin_layout Standard

\series bold
Solução: 
\series default
mudar o tipo do conteúdo da RAM de uma enumeração para um 
\noun on
std_logic_vector
\noun default
 e, adicionalmente, fazer a carga do conteúdo inicial manualmente e externamente
 (sem a função) varrendo-a com contadores.
 Essas alterações fizeram a RAM ser reconhecida e sintetizada, porém para
 uma das RAMs do projeto, estranhamente, foi gerado um warning de "
\emph on
Uninferred RAM due to asynchronous read logic"
\emph default
, que não foi resolvido mas parece não afetar o circuito.
\end_layout

\begin_layout Subsection
Problemas com o componente do teclado (warnings e falhas)
\end_layout

\begin_layout Subsection
Limitação de 3 teclas simultâneas no teclado (não resolvido)
\end_layout

\begin_layout Standard
Quando três teclas já estão pressionadas no teclado, teclas adicionais são
 ignoradas até que solte-se uma das teclas originais.
 Assim, um jogador mal-intencionado pode impedir o outro de jogar, conseguindo
 vencer desonestamente.
 Problema provavelmente causado por uma limitação do 
\emph on
hardware
\emph default
 (teclado) ou pela interface PS/2.
 
\end_layout

\begin_layout Standard

\series bold
Solução: 
\series default
usar dois teclados (um por jogador) conectados em duas placas, sendo que
 a segunda apenas envia para a primeira informações do seu teclado durante
 o jogo.
 Não justifica adicionar uma interface, uma placa e um teclado só para corrigir
 esse problema.
 Ademais, o uso da segunda placa seria subaproveitado.
\end_layout

\begin_layout Subsection
Dificuldade em fazer o som funcionar.
 Complicado pela NIOS e mal documentado em VHDL.
\end_layout

\begin_layout Subsection
Projeto da inteligência artifical dos fantasmas (resolvido)
\end_layout

\begin_layout Standard
Esse não chegou a ser um problema de fato, mas implementar uma movimentação
 "inteligente" para pegar o pacman em hardware seria, potencialmente, bastante
 trabalhoso.
 Além disso, o mau funcionamento dessa parte poderia prejudicar a qualidade
 do jogo, então ela se tornaria uma parte muito laboriosa do projeto.
 No jogo original, cada fantasma funciona com uma IA diferente, porém simples.
 Essa implementação seria muito mais confortável e natural programando um
 algoritmo.
\end_layout

\begin_layout Standard

\series bold
Solução: 
\series default
Resolvemos criar um segundo jogador que controla os fantasmas.
 Apesar disso, eles ainda voltam sozinho para a "jaula"
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Trata-se do percurso automático do fantasma ao centro do mapa quando este
 é "morto" pelo pacman
\end_layout

\end_inset

, algo mais simples de projetar.
 Resultado: menos dor-de-cabeça no hardware e uma jogabilidade diferente.
\end_layout

\begin_layout Subsection

\emph on
Arrays
\emph default
 usados como constantes (não resolvido)
\end_layout

\begin_layout Standard
Há dois grandes mapas constantes no jogo: o mapa inicial e o de percurso
 automático dos fantasmas.
 Além disso, há três vetores enormes de 
\emph on
sprites
\emph default
 para cada um dos mais de 300 tipos de blocos existentes no jogo.
 Apesar de isso facilitar muito a edição dos mapas diretamente no código,
 usar constantes faz com que o conteúdo desses vetores seja sintetizado
 através de células lógicas, enquanto na verdade eles funcionam como memória
 ROM.
\end_layout

\begin_layout Standard

\series bold
Solução: 
\series default
Armazenar esses dados em memória ROM, reduzindo drasticamente o número de
 células lógicas.
 Isso não foi feito pelos seguintes motivos:
\end_layout

\begin_layout Itemize
Não havia praticamente mais blocos de memória on-chip (M4K) disponíveis,
 muitos foram usados para as RAMs.
\end_layout

\begin_layout Itemize
Essas ROMs seriam inicializadas de forma binária através de um arquivo 
\noun on
.mif
\noun default
.
 Além do trabalho em converter enumerações em binário e endereçar corretamente,
 não seria mais tão simples manipular e modificar a longa lista de sprites
\begin_inset Foot
status collapsed

\begin_layout Plain Layout
Na verdade, elas foram geradas automaticamente aos poucos a partir de um
 programa em C que exporta uma planilha para a lista de constantes binárias
\end_layout

\end_inset

.
 Idealmente, deveríamos trabalhar com um programa que permitisse editar
 um 
\noun on
.mif 
\noun default
de pixels RGB organizados na forma de uma matriz.
\end_layout

\begin_layout Subsection
Falta de memória on-chip obrigou a criar tipos enumerados de blocos lógicos.
 Isso causa a borda preta em volta de objetos que estão na mesma memória.
 Memória de pixels off-chip (SRAM) seria a solução.
\end_layout

\begin_layout Subsection
Não registrar os pinos de pixel antes de enviar pra VGA (há uma lógica complexa
 de multiplexadores enormes para gerá-lo) faz o compilador silenciosamente
 mandar um sinal sujo para VGA.
\end_layout

\begin_layout Subsection
Desperdício de memória na RAM de overlay.
 Todos os desenhos são formados por um grupo de 5x5 blocos juntos.
 Então, deveria haver um bloco lógico no lugar de 25 blocos.
 Porém, não adianta aumentar em 5 vezes o tamanho do bloco, pois seu posicioname
nto deve ter uma resolução de um bloco pequeno.
 Solução: projetar alguma maneira complexa de salvar apenas um bloco central
 mas a leitura da RAM deve descobrir que em volta dele há um mapeamento
 de sprites.
 
\end_layout

\begin_layout Section
Descrição básica de E/S
\end_layout

\begin_layout Subsection*
Teclado:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="3" columns="2">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[W][A][S][D]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Controle na forma de cursor para o fantasma verde
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[I][J][K][L]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Controle na forma de cursor para o fantasma vermelho
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[Num 8][Num 4][Num 5][Num 6]
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Controle na forma de cursor para o pacman
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Subsection*
Placa:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="5" columns="2">
<features>
<column alignment="left" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
KEY3
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Reset assíncrono para todo o circuito
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LEDG7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Indicador de 
\emph on
Game Over
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
LEDG2..LEDG0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Número de teclas lidas no teclado
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
HEX3..HEX0
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Mostrador de pontos e mensagens
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
VGA
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Saída de vídeo para monitor (640x480 @60
\emph on
Hz
\emph default
)
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Section
Códigos em VHDL (não atualizados)
\end_layout

\begin_layout Subsection
Top-Level
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[label=alg:Display,caption=Display]{pacman.vhd}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Definições
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[label=alg:Pac_defs,caption=Definicoes para pacman]{pac_defs.vhd}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[basicstyle=
\backslash
tiny,label=alg:Pac_defs,caption=Definicoes para pacman]{t_ovl_blk_sym.txt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[basicstyle=
\backslash
tiny, label=alg:Pac_defs,caption=Mapa inicial]{MAPA_INICIAL.txt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[basicstyle=
\backslash
tiny, label=alg:Pac_defs,caption=Percurso de retorno dos fantamas ]{FAN_PERCURSO.
txt}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
\begin_inset Float algorithm
placement H
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
begin{multicols}{2}
\end_layout

\end_inset


\size scriptsize

\begin_inset CommandInset include
LatexCommand verbatiminput
filename "pat_shift_det.vhd"

\end_inset


\size default

\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
end{multicols}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption

\begin_layout Plain Layout
Componente do detector de padrão 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Registrador-de-Deslocamento"

\end_inset

 em VHDL
\begin_inset CommandInset label
LatexCommand label
name "alg:Componente-do-detector"

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[multicols=2,basicstyle=
\backslash
tiny,label=alg:pac_sprites,caption= sprites pacman ]{pac_sprites.vhd}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[label=alg:Pac_defs,caption=Definicoes para pacman]{ctrl_pacman.vh
d}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[label=alg:Pac_defs,caption=Definicoes para pacman]{ctrl_fans.vhd}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting[label=alg:Pac_defs,caption=Definicoes para pacman]{player_dir.vhd
}
\end_layout

\end_inset


\end_layout

\begin_layout Section
Conclusão
\end_layout

\end_body
\end_document
